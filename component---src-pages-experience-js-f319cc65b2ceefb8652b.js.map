{"version":3,"sources":["webpack:///./src/pages/experience.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/svgs/home.svg","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/styledComponents/header.js","webpack:///./src/components/header.js","webpack:///./src/styledComponents/global.js","webpack:///./src/styledComponents/theme.js","webpack:///./src/components/layout.js"],"names":["SectionContainer","styled","div","withConfig","displayName","componentId","props","colour","SectionHeading","h1","theme","fontSize","font80","font48","Experience","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","headerColour","pathname","this","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","React","Component","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","__webpack_require__","Home","fill","d","key","defaultProps","width","height","viewBox","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","arrayOf","object","createContext","func","StyledHeader","header","font19","HomeIcon","HomeIconSVG","NavItem","li","home","spacing","lg","md","active","colours","primary","Header","react_default","gatsby_link_default","to","includes","GlobalStyle","createGlobalStyle","_templateObject","secondary","tertiary","xxs","xs","sm","xl","xxl","font36","font27","font24","font16","font14","Layout","children","styled_components_browser_esm","Fragment","global","node"],"mappings":"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","file":"component---src-pages-experience-js-f319cc65b2ceefb8652b.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst SectionContainer = styled.div`\n  height: 100vh;\n  background-color: ${props => props.colour};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst SectionHeading = styled.h1`\n  font-size: ${props => props.theme.fontSize.font80};\n  color: ${props => props.colour};\n  text-align: center;\n\n  @media only screen and (max-width: 600px) {\n    font-size: ${props => props.theme.fontSize.font48};\n  }\n`\n\nclass Experience extends React.Component {\n  render() {\n    return (\n      <Layout headerColour=\"#555b6e\" pathname={this.props.location.pathname}>\n        <SEO title=\"Experience\" />\n\n        <SectionContainer colour=\"#555b6e\">\n          <SectionHeading colour=\"#ffffff\">Experience</SectionHeading>\n        </SectionContainer>\n\n        <SectionContainer colour=\"#ECDBFF\">\n          <SectionHeading colour=\"#7948B2\">Personably</SectionHeading>\n        </SectionContainer>\n\n        <SectionContainer colour=\"#AC29B5\">\n          <SectionHeading colour=\"#ffffff\">JustGiving</SectionHeading>\n        </SectionContainer>\n\n        <SectionContainer colour=\"#ccd6e2\">\n          <SectionHeading colour=\"#000000\">Freelance</SectionHeading>\n        </SectionContainer>\n\n        <SectionContainer colour=\"#121212\">\n          <SectionHeading colour=\"#ffffff\">Founders and Coders</SectionHeading>\n        </SectionContainer>\n      </Layout>\n    )\n  }\n}\n\nexport default Experience\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","var React = require('react');\n\nfunction Home (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fill\":\"none\",\"d\":\"M0 0h24v24H0V0z\",\"key\":0}),React.createElement(\"path\",{\"d\":\"M10 19v-5h4v5c0 .55.45 1 1 1h3c.55 0 1-.45 1-1v-7h1.7c.46 0 .68-.57.33-.87L12.67 3.6c-.38-.34-.96-.34-1.34 0l-8.36 7.53c-.34.3-.13.87.33.87H5v7c0 .55.45 1 1 1h3c.55 0 1-.45 1-1z\",\"key\":1})]);\n}\n\nHome.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\"};\n\nmodule.exports = Home;\n\nHome.default = Home;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import styled from \"styled-components\"\nimport HomeIconSVG from \"../svgs/home.svg\"\n\nexport const StyledHeader = styled.header`\n  padding: 20px 60px;\n  font-size: ${props => props.theme.fontSize.font19};\n  color: #ffffff;\n  width: 100%;\n  position: fixed;\n  background-color: ${props => props.headerColour};\n\n  @media only screen and (max-width: 950px) {\n    padding: 20px;\n  }\n\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n`\n\nexport const HomeIcon = styled(HomeIconSVG)`\n  width: 30px;\n  height: 30px;\n  vertical-align: bottom;\n  fill: #ffffff;\n`\n\nexport const NavItem = styled.li`\n  display: inline-block;\n  margin-right: ${props =>\n    props.home ? props.theme.spacing.lg : props.theme.spacing.md};\n  cursor: pointer;\n  padding-bottom: 2px;\n  border-bottom: ${props =>\n    props.active ? `3px solid ${props.theme.colours.primary}` : \"\"};\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n\n  &:last-child {\n    margin-right: 0px;\n  }\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StyledHeader, HomeIcon, NavItem } from \"../styledComponents/header\"\n\nconst Header = props => (\n  <StyledHeader headerColour={props.headerColour}>\n    <ul>\n      <NavItem home active={props.pathname === \"/\"}>\n        <Link to=\"/\">\n          <HomeIcon />\n        </Link>\n      </NavItem>\n\n      <NavItem active={props.pathname.includes(\"/experience\")}>\n        <Link to=\"/experience\">Experience</Link>\n      </NavItem>\n\n      <NavItem active={props.pathname.includes(\"/blog\")}>Blog</NavItem>\n      <NavItem active={props.pathname.includes(\"/contact\")}>\n        <Link to=\"/contact\">Contact</Link>\n      </NavItem>\n    </ul>\n  </StyledHeader>\n)\n\nexport default Header\n","import { createGlobalStyle } from \"styled-components\"\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Nunito Sans';\n    src: url('https://fonts.googleapis.com/css?family=Nunito+Sans:400,700&display=swap');\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  body {\n    margin: 0;\n    font-family: 'Nunito Sans', sans-serif;\n  }\n`\n\nexport default GlobalStyle\n","const theme = {\n  colours: {\n    primary: \"#00D646\",\n    secondary: \"#555b6e\",\n    tertiary: \"#ccd6e2\",\n  },\n  spacing: {\n    xxs: \"4px\",\n    xs: \"8px\",\n    sm: \"12px\",\n    md: \"20px\",\n    lg: \"32px\",\n    xl: \"52px\",\n    xxl: \"84px\",\n  },\n  fontSize: {\n    font80: \"80px\",\n    font48: \"48px\",\n    font36: \"36px\",\n    font27: \"27px\",\n    font24: \"24px\",\n    font19: \"19px\",\n    font16: \"16px\",\n    font14: \"14px\",\n  },\n}\n\nexport default theme\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { ThemeProvider } from \"styled-components\"\n\nimport Header from \"../components/header\"\nimport GlobalStyle from \"../styledComponents/global\"\nimport theme from \"../styledComponents/theme\"\n\nconst Layout = ({ children, pathname, headerColour }) => (\n  <ThemeProvider theme={theme}>\n    <React.Fragment>\n      <GlobalStyle />\n      <Header pathname={pathname} headerColour={headerColour} />\n      <main>{children}</main>\n    </React.Fragment>\n  </ThemeProvider>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}